{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","completedTodos","uncompletedTodos","allTodos","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","event","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","filteredTodos","setEdit","map","todo","index","isComplete","TodoList","setTodos","setFilteredTodos","filter","undefined","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","test","newTodos","updateTodos","removeArr","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e113c90.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm({ completedTodos, uncompletedTodos, allTodos, ...props }) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n          <div className=\"select\">\n            <button\n              onClick={allTodos}\n              className='todo-button btn-select'\n            >\n              All\n            </button>\n            <button\n              onClick={completedTodos}\n              className='todo-button btn-select'\n            >\n              Completed\n            </button>\n            <button\n              onClick={uncompletedTodos}\n              className='todo-button btn-select'\n            >\n              Uncompleted\n            </button>\n          </div>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { FaCheck } from 'react-icons/fa';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo, filteredTodos }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return filteredTodos.map((todo, index) => (\n    <div\n      className={todo.isComplete\n        ? 'todo-row complete'\n        : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <FaCheck\n          onClick={() => completeTodo(todo.id)}\n          className='icon-style'\n        />\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='icon-style'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='icon-style'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    };\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    };\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  const completedTodos = () => {\n    setFilteredTodos(todos.filter(todo => todo.isComplete === true));\n  }\n\n  const uncompletedTodos = () => {\n    setFilteredTodos(todos.filter(todo => todo.isComplete === undefined));\n  }\n\n  const allTodos = () => {\n    setFilteredTodos(todos);\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    saveLocalTodos();\n  });\n\n  /* eslint-disable */\n  useEffect(() => {\n    completedTodos();\n    uncompletedTodos();\n    allTodos()\n  }, [todos]);\n  /* eslint-enable */\n\n  return (\n    <div>\n      <h1>\n        What`s the Plan for Today?\n      </h1>\n      <TodoForm\n        onSubmit={addTodo}\n        completedTodos={completedTodos}\n        uncompletedTodos={uncompletedTodos}\n        allTodos={allTodos}\n      />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  )\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}